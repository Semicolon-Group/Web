{% extends "member_base.html.twig" %}
{% trans_default_domain 'FOSUserBundle' %}
{% block title %}
    Edit
{% endblock %}
{% block banner_img %}
    {{ asset('member_assets/img/banner/banner-bg-1.jpg') }}
{% endblock %}

{% block banner_title %}Edit Profile{% endblock %}

{% block stylesheets %}
    <link href="{{ asset('member_assets/css/card.css') }}" rel="stylesheet">
{% endblock %}
{% block body %}
    <div class="row" style="margin-top: 40px; margin-bottom: 40px;">
        <div class="col-sm-offset-2 col-md-8">
            <div class="card horizontal">
                <div class="card-stacked">
                    {% include "@FOSUser/Profile/edit_content.html.twig" %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block scripts %}
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAsnCz2NQYg03HRAqsT3ip_6pw3IP4JjvA&libraries=places"></script>
    <script>
        $(function () {
            activateAutoComplete();
        });

        function activateAutoComplete() {
            var input = document.getElementById('fos_user_profile_form_address_city');
            var options = {
                types: ['(cities)'],
                componentRestrictions: {country: 'tn'}
            };
            var autocomplete = new google.maps.places.Autocomplete(input, options);

            autocomplete.addListener('place_changed', function() {
                var place = autocomplete.getPlace();
                $('#fos_user_profile_form_address_latitude').val(place.geometry.location.lat());
                $('#fos_user_profile_form_address_longitude').val(place.geometry.location.lng());
                var results = place.formatted_address.split(',');
                var country = results[results.length-1].trim();
                var city = place.formatted_address.replace(', '+country, '');
                $('#fos_user_profile_form_address_city').val(city);
                $('#fos_user_profile_form_address_country').val(country);
                $('#fos_user_profile_form_address_city').blur();
            });
        }

        $('#fos_user_profile_form_address_city').on('input', function () {
            $('#fos_user_profile_form_address_country').val('');
        });

        $('#fos_user_profile_form_address_city').blur(function () {
            if($('#fos_user_profile_form_address_city').val() != '' && $('#fos_user_profile_form_address_country').val() == ''){
                document.getElementById("fos_user_profile_form_address_city").setCustomValidity("Please provide a valid address or let us get your location!");
            }else{
                document.getElementById("fos_user_profile_form_address_city").setCustomValidity("");
            }
        });

        $('#locate').click(function () {
            locate();
        });

        function locate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            } else {
                alert("Geolocation is not supported by this browser, please provide your address");
            }
        }

        function showPosition(position) {
            $('#fos_user_profile_form_address_latitude').val(position.coords.latitude);
            $('#fos_user_profile_form_address_longitude').val(position.coords.longitude);
            geocodeLatLng(position.coords.latitude, position.coords.longitude);
        }

        function showError(error) {
            switch(error.code) {
                case error.PERMISSION_DENIED:
                    alert("Please provide your address");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location unavailable, , please provide your address");
                    break;
                case error.TIMEOUT:
                    alert("Location request timed out, please provide your address");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error has occurred, please provide your address");
                    break;
            }
        }

        function geocodeLatLng(lt, lg) {
            var geocoder = new google.maps.Geocoder;
            var latlng = {lat: lt, lng: lg};
            geocoder.geocode({'location': latlng}, function(results, status) {
                if (status === 'OK') {
                    if (results[0]) {
                        component = results[0].formatted_address.split(',');
                        var country = component[component.length-1].trim();
                        $('#fos_user_profile_form_address_country').val(country);
                        $('#fos_user_profile_form_address_city').val(results[0].formatted_address.replace(', '+country,''));
                        document.getElementById("fos_user_profile_form_address_city").setCustomValidity("");
                    } else {
                        window.alert('No results found');
                    }
                } else {
                    window.alert('Geocoder failed due to: ' + status);
                }
            });
        }
    </script>
{% endblock %}
