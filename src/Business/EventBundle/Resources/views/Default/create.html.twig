{% extends 'business_base.html.twig' %}
{% block title %}Event | Create{% endblock %}
{% block page_title %}Event creation form{% endblock %}
{% block page_path %}
    <li class="breadcrumb-item">Event</li>
    <li class="breadcrumb-item active">Create</li>
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('business_assets/css/bootstrap-datetimepicker.css') }}">
{% endblock %}



{% block body %}


        <h1>Ajouter Event</h1>
    {{ form_start(form,{'attr':{'id':'add_event_form'}}) }}
    <div class="col-lg-12 col-md-6 col-sm-6 col-xs-12">
        <div class="form-group">
            <label  style="color: #0a0a0a" class="control-label" class="required"  for="first-name">Name event: </label><br>
            {{ form_widget(form.title, {'attr':{'class':'form-control'}}) }}
        </div>
    </div>

    <div class="col-lg-12 col-md-6 col-sm-6 col-xs-12">
        <div class="form-group">
            <label  style="color: #0a0a0a" class="control-label" for="first-name">content: </label><br>
            {{ form_widget(form.content, {'attr':{'class':'form-control'}}) }}
        </div>
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="form-group">
            <label style="color: #0a0a0a" class="control-label" for="company-name">image : {{ form_widget(form.photoUrl, {'attr':{'class':'form-control'}}) }}  </label></br>
        </div>
    </div>

    <div class="col-lg-12 col-md-6 col-sm-6 col-xs-12">
        <div class="form-group">
            <label  style="color: #0a0a0a" class="control-label" for="first-name">max places :</label><br>
            {{ form_widget(form.maxPlaces, {'attr':{'class':'form-control'}}) }}
        </div>
    </div>



    <div class="col-lg-12 col-md-6 col-sm-6 col-xs-12">
        <div class="form-group">
            <label  style="color: #0a0a0a" class="control-label" for="first-name" id="start">Start Date: </label><br>
            {{ form_widget(form.startDate, {'attr':{'class':'form-control'}}) }}
        </div>
    </div>


    <div class="col-lg-12 col-md-6 col-sm-6 col-xs-12">
        <div class="form-group">
            <label  style="color: #0a0a0a" class="control-label" for="first-name" id="end">End Date: </label><br>
            {{ form_widget(form.endDate, {'attr':{'class':'form-control'}}) }}
        </div>
    </div>

    <div class="col-lg-12 col-md-6 col-sm-6 col-xs-12">
        <div class="form-group">
            <label  style="color: #0a0a0a" class="control-label" class="required"  for="first-name">country </label><br>
            {{ form_widget(form.address.country, {'id':'pac-input','attr':{'class':'form-control'}}) }}
        </div>
    </div>

    <div class="col-lg-12 col-md-6 col-sm-6 col-xs-12">
        <div class="form-group">
            <label  style="color: #0a0a0a" class="control-label" class="required"  for="first-name">city </label><br>
            {{ form_widget(form.address.city, {'attr':{'class':'form-control'}}) }}
        </div>
    </div>



    {{ form_end(form) }}
    <style>

        #map {
            height: 400px;

        }
        .pac-container {
            font-family: Roboto;
        }

        #type-selector {
            color: #fff;
            background-color: #4d90fe;
            padding: 5px 11px 0px 11px;
        }

        #type-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }
    </style>

    <div class="col-md-5" id="map">
        <input type="hidden" id="latDepart" name="latDepart">
        <input type="hidden" id="lngDepart" name="lngDepart">
    </div>

    <br>
    <br>
    <br>
    <br>




{% endblock %}


{% block scripts %}
    <script src="{{ asset('member_assets/js/events.js') }}"></script>
    <script>

        $(document).ready(function(){
            $('#basebundle_event_endDate').removeClass('form-control').find('select').addClass('myselect')
            $('#basebundle_event_startDate').removeClass('form-control').find('select').addClass('myselect')
        })
        $("#basebundle_event_valider").click(function (event) {
            var start = new Date(
                $('#basebundle_event_startDate_date_year').val()
                ,
                $('#basebundle_event_startDate_date_month').val()-1
                ,
                $('#basebundle_event_startDate_date_day').val());

            var today = new Date();

            var s = (start.getTime()-today.getTime());
            var diff = Math.ceil(s / (1000 * 3600 * 24));
            console.log(start)
            console.log(end)
            console.log(s)
            console.log(diff)
            if(diff<0){
                alert("Invalid StartDate for event");
                event.preventDefault();
            }
        })
        $(document).ready(function(){
            $('#basebundle_event_endDate').removeClass('form-control').find('select').addClass('myselect')
            $('#basebundle_event_startDate').removeClass('form-control').find('select').addClass('myselect')
        })
        $("#basebundle_event_valider").click(function (event) {
            var start = new Date(
                $('#basebundle_event_startDate_date_year').val()
                ,
                $('#basebundle_event_startDate_date_month').val()-1
                ,
                $('#basebundle_event_startDate_date_day').val());
            var end = new Date(
                $('#basebundle_event_endDate_year').val()
                ,
                $('#basebundle_event_endDate_month').val()-1
                ,
                $('#basebundle_event_endDate_day').val());

            var s = (end.getTime()-start.getTime());
            var diff = Math.ceil(s / (1000 * 3600 * 24));
            console.log(start)
            console.log(end)
            console.log(s)
            console.log(diff)
            if(diff<0){
                alert("Invalid date");
                event.preventDefault();
            }
        })

        /*-------------------*/



    </script>

    <script>
        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: -33.8688, lng: 151.2195},
                zoom: 13
            });
            var input = /** @type {!HTMLInputElement} */(
                document.getElementById('pac-input'));

            var types = document.getElementById('type-selector');
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
                map: map,
                anchorPoint: new google.maps.Point(0, -29)
            });

            autocomplete.addListener('place_changed', function() {
                infowindow.close();
                marker.setVisible(false);
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    // User entered the name of a Place that was not suggested and
                    // pressed the Enter key, or the Place Details request failed.
                    window.alert("No details available for input: '" + place.name + "'");
                    return;
                }

                // If the place has a geometry, then present it on a map.
                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);  // Why 17? Because it looks good.
                }
                marker.setIcon(/** @type {google.maps.Icon} */({
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(35, 35)
                }));
                marker.setPosition(place.geometry.location);
                marker.setVisible(true);

                var address = '';
                if (place.address_components) {
                    address = [
                        (place.address_components[0] && place.address_components[0].short_name || ''),
                        (place.address_components[1] && place.address_components[1].short_name || ''),
                        (place.address_components[2] && place.address_components[2].short_name || '')
                    ].join(' ');
                }

                infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
                infowindow.open(map, marker);
            });

            // Sets a listener on a radio button to change the filter type on Places
            // Autocomplete.
            function setupClickListener(id, types) {
                var radioButton = document.getElementById(id);
                radioButton.addEventListener('click', function() {
                    autocomplete.setTypes(types);
                });
            }

            setupClickListener('changetype-all', []);
            setupClickListener('changetype-address', ['address']);
            setupClickListener('changetype-establishment', ['establishment']);
            setupClickListener('changetype-geocode', ['geocode']);
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB34_5Bgw5NI3X4X141PzFjcCorMujhFq8&libraries=places&callback=initMap"
            async defer></script>
{% endblock %}



